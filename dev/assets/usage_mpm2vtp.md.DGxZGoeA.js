import{_ as r,C as p,c as o,o as d,aA as l,j as e,G as a,a as t,w as n}from"./chunks/framework.Dw7Yg_2H.js";const b=JSON.parse('{"title":"MPM to vtp file","description":"","frontmatter":{},"headers":[],"relativePath":"usage/mpm2vtp.md","filePath":"usage/mpm2vtp.md","lastUpdated":null}'),h={name:"usage/mpm2vtp.md"},k={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function c(v,i,D,m,y,f){const s=p("Badge");return d(),o("div",null,[i[20]||(i[20]=l('<h1 id="MPM-to-vtp-file" tabindex="-1">MPM to vtp file <a class="header-anchor" href="#MPM-to-vtp-file" aria-label="Permalink to &quot;MPM to vtp file {#MPM-to-vtp-file}&quot;">​</a></h1><p>Here we export the data from <a href="https://github.com/LandslideSIM/MaterialPointSolver.jl" target="_blank" rel="noreferrer">MaterialPointSolver.jl</a> to a <code>.vtp</code> file. In <code>MaterialPointSolver.jl</code>, we should have already instantiated four structures: <code>DeviceArgs2D</code> (<code>DeviceArgs3D</code>), <code>DeviceGrid2D</code> (<code>DeviceGrid3D</code>), <code>DeviceParticle2D</code> (<code>DeviceParticle3D</code>), <code>DeviceProperty</code>.</p><h2 id="Save-to-.vtp-single-time-step" tabindex="-1">Save to <code>.vtp</code> (single time step) <a class="header-anchor" href="#Save-to-.vtp-single-time-step" aria-label="Permalink to &quot;Save to `.vtp` (single time step) {#Save-to-.vtp-single-time-step}&quot;">​</a></h2>',3)),e("details",k,[e("summary",null,[i[0]||(i[0]=e("a",{id:"MaterialPointVisualizer.savevtp-Union{Tuple{T2}, Tuple{T1}, Tuple{DeviceArgs2D{T1, T2}, DeviceGrid2D{T1, T2}, DeviceParticle2D{T1, T2}, DeviceProperty{T1, T2}}} where {T1, T2}",href:"#MaterialPointVisualizer.savevtp-Union{Tuple{T2}, Tuple{T1}, Tuple{DeviceArgs2D{T1, T2}, DeviceGrid2D{T1, T2}, DeviceParticle2D{T1, T2}, DeviceProperty{T1, T2}}} where {T1, T2}"},[e("span",{class:"jlbinding"},"MaterialPointVisualizer.savevtp")],-1)),i[1]||(i[1]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[3]||(i[3]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savevtp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs2D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceGrid2D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceParticle2D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceProperty{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates the final geometry and properties in <code>.vtp</code> format (2D).</p>`,3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[2]||(i[2]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L16-L23",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",T,[e("summary",null,[i[4]||(i[4]=e("a",{id:"MaterialPointVisualizer.savevtp-Union{Tuple{T2}, Tuple{T1}, Tuple{DeviceArgs3D{T1, T2}, DeviceGrid3D{T1, T2}, DeviceParticle3D{T1, T2}, DeviceProperty{T1, T2}}} where {T1, T2}",href:"#MaterialPointVisualizer.savevtp-Union{Tuple{T2}, Tuple{T1}, Tuple{DeviceArgs3D{T1, T2}, DeviceGrid3D{T1, T2}, DeviceParticle3D{T1, T2}, DeviceProperty{T1, T2}}} where {T1, T2}"},[e("span",{class:"jlbinding"},"MaterialPointVisualizer.savevtp")],-1)),i[5]||(i[5]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[7]||(i[7]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savevtp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs3D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceGrid3D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceParticle3D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceProperty{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates the final geometry and properties in <code>.vtp</code> format (3D).</p>`,3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[6]||(i[6]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L60-L67",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i[21]||(i[21]=e("h2",{id:"Save-to-animation",tabindex:"-1"},[t("Save to animation "),e("a",{class:"header-anchor",href:"#Save-to-animation","aria-label":'Permalink to "Save to animation {#Save-to-animation}"'},"​")],-1)),i[22]||(i[22]=e("p",null,[t("To do this, we need to turn on HDF5 option in "),e("code",null,"MaterialPointSolver.jl"),t(", then we just pass "),e("code",null,"DeviceArgs2D"),t(" ("),e("code",null,"DeviceArgs3D"),t(") into this function:")],-1)),e("details",g,[e("summary",null,[i[8]||(i[8]=e("a",{id:"MaterialPointVisualizer.animation-Union{Tuple{DeviceArgs2D{T1, T2}}, Tuple{T2}, Tuple{T1}} where {T1, T2}",href:"#MaterialPointVisualizer.animation-Union{Tuple{DeviceArgs2D{T1, T2}}, Tuple{T2}, Tuple{T1}} where {T1, T2}"},[e("span",{class:"jlbinding"},"MaterialPointVisualizer.animation")],-1)),i[9]||(i[9]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[12]||(i[12]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs2D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates animation by using the data from HDF5 file (2D).</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[10]||(i[10]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L104-L110",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),i[13]||(i[13]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs3D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates animation by using the data from HDF5 file (3D).</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[11]||(i[11]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L188-L194",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",u,[e("summary",null,[i[14]||(i[14]=e("a",{id:"MaterialPointVisualizer.animation-Union{Tuple{DeviceArgs3D{T1, T2}}, Tuple{T2}, Tuple{T1}} where {T1, T2}",href:"#MaterialPointVisualizer.animation-Union{Tuple{DeviceArgs3D{T1, T2}}, Tuple{T2}, Tuple{T1}} where {T1, T2}"},[e("span",{class:"jlbinding"},"MaterialPointVisualizer.animation")],-1)),i[15]||(i[15]=t()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[18]||(i[18]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs2D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates animation by using the data from HDF5 file (2D).</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[16]||(i[16]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L104-L110",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),i[19]||(i[19]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeviceArgs3D{T1, T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Generates animation by using the data from HDF5 file (3D).</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>i[17]||(i[17]=[e("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/d6002ad4201afe605a2f4fed42f92ab77e1ca26a/src/mpm2vtp.jl#L188-L194",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const _=r(h,[["render",c]]);export{b as __pageData,_ as default};
