import{_ as h,C as o,c as t,o as e,aA as l,j as i,a,G as p,w as r}from"./chunks/framework.BA9a0nWF.js";const k="/MaterialPointVisualizer.jl/v0.1.6/assets/example.BdKb66WQ.png",C=JSON.parse('{"title":"GUI","description":"","frontmatter":{},"headers":[],"relativePath":"usage/display.md","filePath":"usage/display.md","lastUpdated":null}'),d={name:"usage/display.md"},u={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.294ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 572 453","aria-hidden":"true"},c={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.052ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 465 453","aria-hidden":"true"},y={class:"jldocstring custom-block",open:""};function m(w,s,b,v,x,f){const n=o("Badge");return e(),t("div",null,[s[11]||(s[11]=l('<h1 id="gui" tabindex="-1">GUI <a class="header-anchor" href="#gui" aria-label="Permalink to &quot;GUI&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Info</p><p>Sometimes we already have data in Julia and just want to see the results without exporting it to other software for visualization, which is too troublesome...😢</p></div><p>We implemented a high-performance rapid visualization solution using <a href="https://threejs.org" target="_blank" rel="noreferrer">Three.js</a>, allowing you to quickly and smoothly view millions of particles (at least on my laptop). However, sometimes we connect to a remote headless server for calculations via SSH, and at this point, we also support quickly viewing the results through your local browser.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>If your data is large on a remote server, such as over a million, then you need to wait for the data to be transferred locally. We use a binary file for saving. During this process, the web page content is blank.</p></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2>',5)),i("p",null,[s[4]||(s[4]=a("Assuming we visualize locally (GUI) and use the particles' ")),i("mjx-container",u,[(e(),t("svg",g,s[0]||(s[0]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mi"},[i("path",{"data-c":"1D465",d:"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z",style:{"stroke-width":"3"}})])])],-1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"x")])],-1))]),s[5]||(s[5]=a(" and ")),i("mjx-container",c,[(e(),t("svg",E,s[2]||(s[2]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mi"},[i("path",{"data-c":"1D467",d:"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z",style:{"stroke-width":"3"}})])])],-1)]))),s[3]||(s[3]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"z")])],-1))]),s[6]||(s[6]=a(" coordinates as two attributes of the vertices for coloring:"))]),s[12]||(s[12]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MaterialPointGenerator </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># generate particles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MaterialPointVisualizer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshbuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x, y coordinates</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># z coordinates</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coords </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hcat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy, z) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># vertices</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">attr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (xcoord</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coords[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], zcoord</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coords[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># vertices&#39; attibutes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vispts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coords, colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viridis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">attr, gui</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If everything is normal, you should now see a separate window displaying the particles. If <code>gui=false</code>, then the Julia REPL should print an address for you to check in your browser.</p><p><img src="`+k+'" alt=""></p><p>I personally believe that for visualizations with more than 3,600,000 particles, the human eye may not be able to discern differences, so this is the default threshold, but you can change it freely.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><ol><li><p>On the touchpad, a two-finger press and move is panning.</p></li><li><p>If the input method is not in English when the GUI is opened, the Julia REPL may print some information; please ignore it.</p></li></ol></div><div class="warning custom-block"><p class="custom-block-title">Warning</p><ul><li><p>If you use <code>gui=true</code> on a headless server, it will throw an error. In other words, the remote server must use a website approach.</p></li><li><p>Although the Julia VSCode extension has a plot panel, I don&#39;t want to use it. Opening a browser should be sufficient. I guess everyone has at least one modern browser on their computer. 😝</p></li></ul></div><p>Many args are not required, please check:</p>',7)),i("details",y,[i("summary",null,[s[7]||(s[7]=i("a",{id:"MaterialPointVisualizer.vispts-Tuple{Matrix}",href:"#MaterialPointVisualizer.vispts-Tuple{Matrix}"},[i("span",{class:"jlbinding"},"MaterialPointVisualizer.vispts")],-1)),s[8]||(s[8]=a()),p(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[10]||(s[10]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vispts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coord</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viridis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), gui</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sample_n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Description:</strong></p><p>Visualize the particles in a local GUI window or website.</p><ul><li><code>coord</code> is a matrix of the particle coordniates, it can be 2/3 colomns for 2/3D</li></ul><p>visualization.</p><ul><li><code>colormap</code> is the color theme will be used in the visualization. By default, it is</li></ul><p>set to &quot;viridis&quot;. [optional]</p><ul><li><code>attrs</code> is a NamedTuple of the attributes of the particles, the keys are the attribute</li></ul><p>names and the values are the attribute values. [optional]</p><ul><li><code>gui</code> is a boolean value to determine whether to open a local GUI window or a website. By</li></ul><p>default, it is set to false, i.e., website mode. [optional]</p><ul><li><code>sample_n</code> is the number of particles to be sampled for visualization. By default, it</li></ul><p>is set to 3,600,000. [optional]</p>',13)),p(n,{type:"info",class:"source-link",text:"source"},{default:r(()=>s[9]||(s[9]=[i("a",{href:"https://github.com/LandslideSIM/MaterialPointVisualizer.jl/blob/8e7e7ca0a3c0d1f435f5416e4d79dd0946617831/src/plot/display.jl#L13-L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const T=h(d,[["render",m]]);export{C as __pageData,T as default};
